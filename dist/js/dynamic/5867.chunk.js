"use strict";(self.webpackChunk_roots_bud=self.webpackChunk_roots_bud||[]).push([[5867,3639],{"../node_modules/highlight.js/es/languages/capnproto.js":(e,n,t)=>{function s(e){var n={variants:[{match:[/(struct|enum|interface)/,/\s+/,e.IDENT_RE]},{match:[/extends/,/\s*\(/,e.IDENT_RE,/\s*\)/]}],scope:{1:"keyword",3:"title.class"}};return{name:"Cap\u2019n Proto",aliases:["capnp"],keywords:{keyword:["struct","enum","interface","union","group","import","using","const","annotation","extends","in","of","on","as","with","from","fixed"],type:["Void","Bool","Int8","Int16","Int32","Int64","UInt8","UInt16","UInt32","UInt64","Float32","Float64","Text","Data","AnyPointer","AnyStruct","Capability","List"],literal:["true","false"]},contains:[e.QUOTE_STRING_MODE,e.NUMBER_MODE,e.HASH_COMMENT_MODE,{className:"meta",begin:/@0x[\w\d]{16};/,illegal:/\n/},{className:"symbol",begin:/@\d+\b/},n]}}t.r(n),t.d(n,{default:()=>s})},"../node_modules/highlight.js/es/languages/capnproto.js.js":(e,n,t)=>{t.r(n),t.d(n,{default:()=>a});var s=t("../node_modules/highlight.js/es/languages/capnproto.js");!function e(){e.warned||(e.warned=!0,console.log('Deprecation (warning): Using file extension in specifier is deprecated, use "highlight.js/lib/languages/capnproto" instead of "highlight.js/lib/languages/capnproto.js"'))}();const a=s.default}}]);